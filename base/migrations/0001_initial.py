# Generated by Django 4.0.10 on 2024-05-06 15:28

import base.models.item
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('slug', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='カテゴリ名(アルファベット)')),
                ('name', models.CharField(max_length=32, verbose_name='カテゴリ名')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('slug', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='タグ名(アルファベット)')),
                ('name', models.CharField(max_length=32, verbose_name='タグ名')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50, verbose_name='名前')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='価格')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='在庫')),
                ('description', models.TextField(blank=True, default='', verbose_name='説明')),
                ('sold_count', models.PositiveIntegerField(default=0, verbose_name='販売数')),
                ('is_published', models.BooleanField(default=False, verbose_name='公開')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('image', models.ImageField(blank=True, default='', upload_to=base.models.item.upload_image_to)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.category')),
                ('tags', models.ManyToManyField(to='base.tag')),
            ],
            options={
                'db_table': '商品',
            },
        ),
    ]
